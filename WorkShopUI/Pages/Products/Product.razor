@inherits ProductBase

@page "/products"
@using Domain.Views

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-10">
            <h2>Productos</h2>

            <div class="top-separator">

                <Card>
                    <CardBody>
                        <CardTitle>Búsqueda</CardTitle>
                        <Fields>
                            <Field>
                                <FieldLabel>Texto</FieldLabel>
                                <TextEdit Placeholder="Texto de búsqueda" @bind-Text="@SearchView.Text"/>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is6">
                                <FieldLabel>Tipo de Producto</FieldLabel>
                                <Select @bind-SelectedValue="SearchView.Type" TValue="string" Class="custom-select">
                                    <SelectItem Value="@((string)"%")">Todos</SelectItem>
                                    <SelectItem Value="@((string)"P")">Producto</SelectItem>
                                    <SelectItem Value="@((string)"S")">Servicio</SelectItem>
                                </Select>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is6">
                                <FieldLabel>Activo</FieldLabel>
                                <Select @bind-SelectedValue="SearchView.Active" TValue="int" Class="custom-select">
                                    <SelectItem Value="1">Si</SelectItem>
                                    <SelectItem Value="0">No</SelectItem>
                                </Select>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is6">
                                <FieldLabel>Filas</FieldLabel>
                                <Select @bind-SelectedValue="SearchView.Size" Class="custom-select" TValue="int">
                                    <SelectItem Value="10">10</SelectItem>
                                    <SelectItem Value="25">25</SelectItem>
                                    <SelectItem Value="50">50</SelectItem>
                                    <SelectItem Value="100">100</SelectItem>
                                    <SelectItem Value="50">500</SelectItem>
                                </Select>
                            </Field>
                        </Fields>
                        <Button Color="Color.Secondary" Clicked="@Search">Buscar</Button>
                        <Button Color="Color.Primary" Clicked="@ShowAddModal">Agregar Producto</Button>
                    </CardBody>                    
                </Card>

            </div>

            <ErrorMessage Display="@DisplayErrorMessage" Message="@ErrorMessage" />
            
            <div class="top-separator">

                <ErrorMessage Display="@DisplayErrorMessage" Message="@ErrorMessage" />

                <DataGrid TItem="ProductView"
                        Data="@Products"
                        ReadData="@OnReadData"
                        TotalItems="@SearchResponse.Pageable.TotalElements"
                        PageSize="@SearchView.Size"
                        ShowPager="true"
                        Striped="true"
                        Responsive>
                    
                    <ChildContent>
                        <DataGridCommandColumn EditCommandAllowed="true" />
                        <DataGridColumn TItem="ProductView" Field="Id" Caption="#">
                            <DisplayTemplate>
                                @{
                                    var id = (context as ProductView)?.Id;
                                    <div @onclick="() => GetProduct(id)" class="crud-icon"> 
                                        <Icon Name="IconName.Edit" />
                                    </div>
                                }
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="ProductView" Field="Code" Caption="Código" />
                        <DataGridColumn TItem="ProductView" Field="Name" Caption="Nombre" />
                        <DataGridColumn TItem="ProductView" Field="Active" Caption="Tipo">
                            <DisplayTemplate>
                                @{
                                    var type = (context as ProductView)?.Type;
                                    <ProductTypeField Value="@type" />
                                }
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="ProductView" Field="Active" Caption="Activo">
                            <DisplayTemplate>
                                @{
                                    var active = (context as ProductView)?.Active;
                                    <ActiveField Value="@active" />
                                }
                            </DisplayTemplate>
                        </DataGridColumn>
                    </ChildContent>
                </DataGrid>
            </div>

            <Modal @bind-Visible="@DisplayModal">
                <ModalContent Centered>
                    <ModalHeader>
                        @if (ModifyModal)
                        {
                            <ModalTitle>Actualizar Producto</ModalTitle>
                        }
                        else
                        {
                            <ModalTitle>Agregar Producto</ModalTitle>
                        }
                        <CloseButton Clicked="@HideAddModal"/>
                    </ModalHeader>
                    <ModalBody>

                        <ErrorMessage Display="@HasModalError" Message="@ModalErrorMessage" />

                        <Validations Mode="ValidationMode.Manual" Model="@ProductView" @ref="Validations">
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Tipo</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <Select @bind-SelectedValue="ProductView.Type" Class="custom-select" TValue="string">
                                            <SelectItem Value="ProductTypeView.PRODUCT" TValue="ProductTypeView">Producto</SelectItem>
                                            <SelectItem Value="ProductTypeView.SERVICE" TValue="ProductTypeView">Servicio</SelectItem>
                                        </Select>
                                    </FieldBody>
                                </Field>                                
                            </Validation>
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Código</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="Código" @bind-Text="@ProductView.Code">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Nombre</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <TextEdit Placeholder="Nombre" @bind-Text="@ProductView.Name">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                            <Validation>
                                <Field Horizontal>
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Descripción</FieldLabel>
                                    <FieldBody ColumnSize=ColumnSize.Is10>
                                        <MemoEdit Rows="4" @bind-Text="@ProductView.Description" />
                                    </FieldBody>
                                </Field>
                            </Validation>
                            @if (ModifyModal)
                            {
                                <Validation>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.Is2">Activo</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.Is10">
                                            <Select @bind-SelectedValue="ProductView.Active" Class="custom-select" TValue="string">
                                                <SelectItem Value="ActiveTypeView.ACTIVE" TValue="ActiveTypeView">Si</SelectItem>
                                                <SelectItem Value="ActiveTypeView.INACTIVE" TValue="ActiveTypeView">No</SelectItem>
                                            </Select>
                                        </FieldBody>
                                    </Field>
                                </Validation>
                            }
                        </Validations>
                    </ModalBody>
                    <ModalFooter>
                        <Button Color="Color.Primary" Clicked="@SaveChanges">Guardar</Button>
                        <Button Color="Color.Secondary" Clicked="@HideAddModal">Cancelar</Button>
                    </ModalFooter>
                </ModalContent>
            </Modal>

        </div>
    </div>
</div>
